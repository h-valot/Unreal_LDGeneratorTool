Est-ce que vous savez déjà comment vous allez faire ? Qu’est-ce qu’il vous manque ? Qu’est-ce que vous allez chercher ?

# INTERFACE

- Créer tool dans unreal sous forme de Editor Utility Widget
- Ajouter un switcher pour naviger entre “Perlin Noise 2D Map generator” et le “Random generator”
- Ajouter un bouton “Generate” et d’autre paramètre à l’aide d’un slider à ce widget
- Implémenter la fonctionnalité de la fonction de génération procédurale
- Dans un second temps, faire en sorte que ce bouton “Generate” soit accessible depuis la menu bar à l’aide d’un Editor Utility Blueprint

# FONCTIONNALITE

- Gérer la suppression de tous les actors d’une scène : avec Get All Actors Of Class (Actor)
- Gérer l’instantiation de actors dans la scène : choisir la classe générer de façon procedurale
- Faire en sorte que les objects soient les uns à la suite des autres : garde une yOffset qui s’incrémente de la taille de l’actor instantié, positionner les nouveaux actors à cette yOffset

# PROCEDURALITE

## RANDOM

- Gérer le choix de la classe à l’aide d’un random :

## PERLIN NOISE

- Générer un nomber “aléatoire” à l’aide d’un bruit de perlin 2d. Prendre la valeur abolue de cette valeur de bruit de perlin (actuellement comprise entre -1 et 1) puis la multiplié par le nombre d’actors différents et l’arrondir pour avoir un int compris entre 0 et le nombre d’actors différents
- (Coder la function Perlin Noise 2D en Blueprint car Unreal ne l’a pas fait)

# ACTORS LD BRICKS

- Faire des cubes de couleur de différente taille sans les scales → faire des assemblages de primitives de la taille de base